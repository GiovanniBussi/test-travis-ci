language: cpp
cache:
  directories:
    - $HOME/opt-cached
addons:
  apt:
    packages:
    - libmatheval-dev
#    - mpich2
    - valgrind
    - libatlas-base-dev
    - doxygen-latex
    - graphviz
sudo: false
env:
# list of configurations to be attempted:
# MPI + doc
# this is the "master" one, it is going to update the manual if log contains [makedoc]
  - PLUMED_CC=mpicc PLUMED_CXX=mpic++ MAKEDOC=yes ALMOST=yes CONFIG_FLAGS="--disable-external-lapack --disable-external-blas"
# the following are with debug flags
# I think clang does not support debug-glibcxx, so I skip it here
  - PLUMED_CC=gcc   PLUMED_CXX=g++    CONFIG_FLAGS="--enable-debug --enable-debug-glibcxx" CONFIG_FLAGS="--disable-external-lapack --disable-external-blas"
# with debug flags there are issues with openmp+mpi on travis - I disable openmp here
  - PLUMED_CC=mpicc PLUMED_CXX=mpic++ CONFIG_FLAGS="--enable-debug --enable-debug-glibcxx --disable-openmp" CONFIG_FLAGS="--disable-external-lapack --disable-external-blas"
# then I try serial compilers
  - PLUMED_CC=clang PLUMED_CXX=clang++
  - PLUMED_CC=gcc   PLUMED_CXX=g++
# then check with different optimization flags
  - PLUMED_CC=clang PLUMED_CXX=clang++ PLUMED_CXXFLAGS=-O3
  - PLUMED_CC=gcc   PLUMED_CXX=g++     PLUMED_CXXFLAGS=-O3
# test using external blas with internal lapack
  - PLUMED_CC=mpicc PLUMED_CXX=mpic++  PLUMED_CXXFLAGS=-O3 CONFIG_FLAGS="--disable-external-lapack"
# cppcheck
  - CPPCHECK=yes
# with debug flags there are issues with openmp+mpi on travis - I disable openmp here
# I leave this test here to monitor if things change in the future, allowing it to fail
  - PLUMED_CC=mpicc PLUMED_CXX=mpic++ CONFIG_FLAGS="--enable-debug --enable-debug-glibcxx"
matrix:
  allow_failures:
    - env: CPPCHECK=yes
    - env: PLUMED_CC=mpicc PLUMED_CXX=mpic++ CONFIG_FLAGS="--enable-debug --enable-debug-glibcxx"
# Possible additional variables:
#   VALGRIND=yes to make valgrind tests, only when log contains string [valgrind]
install:
# install all the required dependencies
  - .travis/install.all
# add to path the proper versions of dependencies
  - source .travis/addpath "$HOME/opt-cached/xdrfile-1.1.4"
  - source .travis/addpath "$HOME/opt-cached/cppcheck-1.69"
  - if test "$PLUMED_CXX" == "mpic++" ; then source .travis/addpath "$HOME/opt-cached/mpich-3.1.4" ; fi
  - source .travis/addpath "$HOME/opt-cached/doxygen-1.8.7"
# setup environment to allow install plumed on the home directory
  - source .travis/addpath "$HOME/opt"
# build the manual, only if log contains string [makedoc]
  - export PLUMED_NUM_THREADS=2
  - ./.travis/check.log makedoc  || MAKEDOC=no
  - ./.travis/check.log valgrind || VALGRIND=no
  - ./.travis/check.log almost   || ALMOST=no
  - if test "$ALMOST" == yes ; then ./.travis/install.almost                     ; fi
  - if test "$ALMOST" == yes ; then CONFIG_FLAGS="$CONFIG_FLAGS --enable-almost" ; fi
  - if test "$ALMOST" == yes ; then PLUMED_CPPFLAGS="$INCLUDE -I/usr/local/include -I/usr/local/include/almost"  ; fi
# moreover, we hardcode path to dynamic library, required for xdrfile to link properly
# I do it only when LD_LIBRARY_PATH is non blank, since otherwise clang gives problems
  - if test -n "$LD_LIBRARY_PATH" ; then PLUMED_LDFLAGS="-Wl,-rpath,$LD_LIBRARY_PATH" ; fi
script:
# we enable crystallization and manyrestraints modules
  - CONFIG_FLAGS="$CONFIG_FLAGS --enable-modules=crystallization:manyrestraints"

# BUILD:
# this is done only if PLUMED_CXX is defined
# we have to pass the full path since on travis machines sudo does not have compilers in the path
  - if test "$PLUMED_CXX" ; then ./configure CXX=$(which $PLUMED_CXX) CC=$(which $PLUMED_CC) CXXFLAGS="$PLUMED_CXXFLAGS" LDFLAGS="$PLUMED_LDFLAGS" CPPFLAGS="$PLUMED_CPPFLAGS" $CONFIG_FLAGS ; fi
  - if test "$PLUMED_CXX" ; then make -j 2 ; fi
# we install plumed so that it is in the path
  - if test "$PLUMED_CXX" ; then make install prefix="$HOME/opt" ; fi

# TEST:
  - if test "$VALGRIND" == yes ; then OPT=valgrind ; else OPT="" ; fi
  - if test "$PLUMED_CXX" ; then make -C regtest $OPT ; fi
  - if test "$MAKEDOC" == yes ; then make -C regtest copytodoc ; fi
  - if test "$MAKEDOC" == yes ; then make doc >/dev/null ; fi
  - if test "$PLUMED_CXX" ; then make -C regtest checkfail ; fi

# CPPCHECK:
# this is required so as to have all the include files inplace:
# notice that this is done automatically in build
  - if test "$CPPCHECK" == yes ; then make -C src/lib/ dirslinks ; fi
# then we do cppcheck
  - if test "$CPPCHECK" == yes ; then make cppcheck ; fi
after_success:
  - if test "$MAKEDOC" == yes ; then ./.travis/pushdoc ; fi 
