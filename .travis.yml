language: cpp
cache:
  directories:
    - $HOME/opt-cached
addons:
  apt:
    packages:
    - libmatheval-dev
    - valgrind
    - libatlas-base-dev
    - doxygen-latex
    - graphviz
sudo: false
env:
# list of configurations to be attempted:
# MPI + doc
# this is the "master" one, it is going to update the manual if log contains [makedoc]
  - PLUMED=parallel MAKEDOC=yes ALMOST=yes CONFIG_FLAGS="--disable-external-lapack --disable-external-blas"
# serial with debug
  - PLUMED=serial   PLUMED_CXX=auto  CONFIG_FLAGS="--enable-debug --enable-debug-glibcxx --disable-external-lapack --disable-external-blas"
# parallel with debug
  - PLUMED=parallel CONFIG_FLAGS="--enable-debug --enable-debug-glibcxx --disable-external-lapack --disable-external-blas"
# serial optimized
  - PLUMED=serial  PLUMED_CXX=auto    PLUMED_CXXFLAGS=-O3
# parallel optimized (with internal lapack as a double check)
  - PLUMED=parallel  PLUMED_CXXFLAGS=-O3 CONFIG_FLAGS="--disable-external-lapack"
# cppcheck
  - CPPCHECK=yes
# Possible additional variables:
#   VALGRIND=yes to make valgrind tests, only when log contains string [valgrind]
compiler:
  - gcc
  - clang
install:
# only upload doc with gcc
  - if test "CC" == clang ; then MAKEDOC=no ; fi
# install all the required dependencies
  - .travis/install.all
# add to path the proper versions of dependencies
  - source .travis/addpath "$HOME/opt-cached/xdrfile-1.1.4"
  - source .travis/addpath "$HOME/opt-cached/cppcheck-1.69"
  - if test "$PLUMED" == parallel ; then source .travis/addpath "$HOME/opt-cached/mpich-3.1.4" ; fi
  - source .travis/addpath "$HOME/opt-cached/doxygen-1.8.7"
# setup environment to allow install plumed on the home directory
  - source .travis/addpath "$HOME/opt"
# build the manual, only if log contains string [makedoc]
  - export PLUMED_NUM_THREADS=2
  - ./.travis/check.log makedoc  || MAKEDOC=no
  - ./.travis/check.log valgrind || VALGRIND=no
  - ./.travis/check.log almost   || ALMOST=no
  - if test "$ALMOST" == yes ; then ./.travis/install.almost                     ; fi
  - if test "$ALMOST" == yes ; then CONFIG_FLAGS="$CONFIG_FLAGS --enable-almost" ; fi
  - if test "$ALMOST" == yes ; then PLUMED_CPPFLAGS="$INCLUDE -I/usr/local/include -I/usr/local/include/almost"  ; fi
# moreover, we hardcode path to dynamic library, required for xdrfile to link properly
# I do it only when LD_LIBRARY_PATH is non blank, since otherwise clang gives problems
  - if test -n "$LD_LIBRARY_PATH" ; then PLUMED_LDFLAGS="-Wl,-rpath,$LD_LIBRARY_PATH" ; fi
script:
# we enable crystallization and manyrestraints modules
  - CONFIG_FLAGS="$CONFIG_FLAGS --enable-modules=crystallization:manyrestraints"

# BUILD:
# this is done only if PLUMED is defined
  - if test "$PLUMED" == serial   ; then PLUMED_CC=$CC   ; PLUMED_CXX=$CXX; fi
  - if test "$PLUMED" == parallel ; then PLUMED_CC=mpicc ; PLUMED_CXX=mpic++ ; fi
  - if test "$PLUMED" ; then ./configure CXX="$PLUMED_CXX" CC="$PLUMED_CC" CXXFLAGS="$PLUMED_CXXFLAGS" LDFLAGS="$PLUMED_LDFLAGS" CPPFLAGS="$PLUMED_CPPFLAGS" $CONFIG_FLAGS ; fi
  - if test "$PLUMED" ; then make -j 2 ; fi
# we install plumed so that it is in the path
  - if test "$PLUMED" ; then make install prefix="$HOME/opt" ; fi

# TEST:
  - if test "$VALGRIND" == yes ; then OPT=valgrind ; else OPT="" ; fi
  - if test "$PLUMED" ; then make -C regtest $OPT ; fi
  - if test "$MAKEDOC" == yes ; then make -C regtest copytodoc ; fi
  - if test "$MAKEDOC" == yes ; then make doc >/dev/null ; fi
  - if test "$PLUMED" ; then make -C regtest checkfail ; fi

# CPPCHECK:
# this is required so as to have all the include files inplace:
# notice that this is done automatically in build
  - if test "$CPPCHECK" == yes ; then make -C src/lib/ dirslinks ; fi
# then we do cppcheck
  - if test "$CPPCHECK" == yes ; then make cppcheck ; fi
after_success:
  - if test "$MAKEDOC" == yes ; then ./.travis/pushdoc ; fi 
